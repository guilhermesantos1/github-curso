Configurando username e email
git config --global user.name "Meu nome"
git config --global user.email "meuemail@teste.com"

Configurando editor principal / OPCOES(vim, atom)
git config --global core.editor vim

Imprimir valor do username, email, editor principal
git config user.name
git config user.email
git config core.editor

Imprimir todas as config do git
git config --list

Criar diretorio no terminal
mkdir

Comando para criar um arquivo
echo conteudo_de_dentro_do_arquivo >> nome_do_arquivo.extensao

Navegar entre os diretorios
cd nome_da_pasta

Voltar um diretorio acima
cd ..

Para iniciar um repositorio git local
git init

Para ver a estrutura de pastas
ls -la

Ver log de todos os commits do projeto
git log

Ver logs com informacoes de branch
git log --decorate

Ver logs filtrando pelo autor do commit
git log --author="Nome"

Ver log em ordem alfabetica mostrando a quantidade de commits, quem fez e o comentario da pessoa
git shortlog

Ver somente o nome da pessoa e quantos commits ela fez
git shortlog -sn

Ver grafico dos branchs do projeto
git log --graph

Ver alteracoes de um commit especifico utilizando a hash do log
git show hash

Comando para ver as alteracoes antes de commitar os arquivos
git diff

Comando para ver somente os arquivos que foram modificados
git diff --name-only

Comando para adicionar todos os arquivos modified ao staged
git add .

Comando para adicionar um unico arquivo ao staged
git add nome_do_arquivo

Comando para adicionar ao staged e comitar um arquivo ja existente
git commit -am "mensagem"

Comando para commitar e digitar uma mensagem
git commit -m "Sua mensagem"

Comando para subir as suas alteracoes no repositorio remote
git push origin nome_do_branch

Comando para atualizar o repositorio local com os arquivos do remote
git pull

Comando para clonar um projeto
git clone link_do_projeto nome_da_pasta_de_projeto

Comando para voltar as alteracoes feitas em um arquivo, exemplo README.md
git checkout README.md

Comando para tirar o arquivo do Staged, ou seja pronto para comitar
git reset HEAD nome_do_arquivo

Comando para resetar commits, tem 3 tipos: --soft --mixed --hard
git reset --soft hash_log
::--soft:: mata o commit e deixa o arquivo preparado para commitar, ou seja, staged
::--mixed:: mata o commit e deixa o arquivo unstaged
::--hard:: mata o commit e desfaz todas as alteracoes ja feitas

Comando para criar um branch
git checkout -b nome_do_branch

Comando para listar todos os branchs existentes no projeto e ele indica em qual branch você está atualmente
git branch

Comando para deletar um branch
git branch -D nome_do_branch
